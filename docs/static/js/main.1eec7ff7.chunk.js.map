{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","category","inputValue","setInputValue","onSubmit","e","preventDefault","cats","name","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","cargando","estado","setEstado","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kNA+CeA,EA5CK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,CAEzCC,SAAU,KAJyB,mBAEhCC,EAFgC,KAEpBC,EAFoB,KA4BvC,OACI,sBAAMC,SAZW,SAACC,GAElBA,EAAEC,iBAEFH,EAAc,CACVF,SAAU,KAEdF,GAAe,SAAAQ,GAAI,OAAML,EAAWD,UAAjB,mBAA8BM,QAKjD,SAEI,uBACIC,KAAO,WAAWC,KAAO,OACzBC,MAAUR,EAAWD,SACrBU,SA1Bc,SAACN,GAEvBF,EAAc,2BACPD,GADM,kBAEJG,EAAEO,OAAOJ,KAAO,CAACH,EAAEO,OAAOF,gB,wBCE5BG,EAjBF,uCAAG,WAAQZ,GAAR,uBAAAa,EAAA,6DAENC,EAFM,iDAE2CC,UAAWf,GAFtD,+DAGOgB,MAAMF,GAHb,cAGNG,EAHM,gBAISA,EAAKC,OAJd,uBAILC,EAJK,EAILA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAClB,CACIC,GAAID,EAAIC,GACRC,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAKE,MACZV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV9B,kBAcLM,GAdK,4CAAH,sDCYEO,EAVK,SAAC,GAAkB,IAAjBb,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAEvB,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCkBDO,EArBC,SAAC,GAAgB,IAAf/B,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAEVD,mBAAS,CACjCoB,KAAM,GACNa,UAAU,IAJwB,mBAE/BC,EAF+B,KAEvBC,EAFuB,KAmBtC,OAZAC,qBAAU,WAENvB,EAAQZ,GACHoC,MAAM,SAAAC,GAAI,OACPH,EAAU,CACNf,KAAMkB,EACNL,UAAU,SAIxB,CAAChC,IAEIiC,EDhByBK,CAAatC,GAAjCyB,EAFgB,EAErBN,KAAaa,EAFQ,EAERA,SAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmD5B,IAClDgC,GAAY,mBAAGJ,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SAEWH,EAAOJ,KAAK,SAAAC,GAAG,OACX,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBiB,IAAKjB,EAAIC,eES5CiB,EArBM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEI2C,EAAWpB,KAAK,SAACrB,GAAD,OACd,cAAC,EAAD,CAASA,SAAYA,GAAiBA,Y,MCVtD0C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1eec7ff7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState({\r\n       \r\n        category: ''\r\n        \r\n    });\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue({\r\n            ...inputValue,\r\n                [e.target.name]: [e.target.value]\r\n        })\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        setInputValue({\r\n            category: ''\r\n        })\r\n        setCategories( cats => [ inputValue.category, ...cats ]);\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n\r\n            <input \r\n                name = \"category\" type = \"text\" \r\n                value = { inputValue.category } \r\n                onChange = { handleInputChange } \r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\nexport default AddCategory\r\n","const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=rp7YDfxo67m2wIC41GyHt518aEgFKDzA`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map((img) =>(\r\n        {\r\n            id: img.id,\r\n            title: img?.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    ))\r\n    \r\n    return gifs;\r\n\r\n}\r\nexport default getGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({url, title}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data:images, cargando} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadein\">{category}</h3>\r\n            {cargando && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n            {<div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem {...img} key={img.id}/>\r\n                        ))\r\n                    }\r\n            </div> \r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport getGifs from \"../helpers/getGif\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [estado, setEstado] = useState({\r\n        data: [],\r\n        cargando: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then( imgs => (\r\n                setEstado({\r\n                    data: imgs,\r\n                    cargando: false\r\n            })\r\n            ));\r\n\r\n    },[category])\r\n\r\n    return estado;\r\n\r\n}\r\n","import React,{useState} from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>  \r\n          <AddCategory setCategories = { setCategories } />\r\n          <hr/>\r\n          <ol>\r\n            {\r\n              categories.map( (category) => (\r\n                <GifGrid category = {category} key = {category} />\r\n              ))\r\n            }\r\n          </ol>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}